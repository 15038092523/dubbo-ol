<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
  http://www.springframework.org/schema/beans/spring-beans-3.0.xsd   
  http://www.springframework.org/schema/tx   
  http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
  http://www.springframework.org/schema/aop
  http://www.springframework.org/schema/aop/spring-aop-3.0.xsd 
  http://www.springframework.org/schema/context  
  http://www.springframework.org/schema/context/spring-context-3.0.xsd  
  http://www.springframework.org/schema/util  
  http://www.springframework.org/schema/util/spring-util-3.0.xsd  
  http://www.springframework.org/schema/cache    
  http://www.springframework.org/schema/cache/spring-cache.xsd">


	<!-- 创建数据源（数据连接池使用dbcp） -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url"
			value="jdbc:mysql://192.168.199.152:3306/db_product" />
		<property name="username" value="root" />
		<property name="password" value="1qaz!QAZ" />
		<!-- 连接池启动时的初始值 -->
		<property name="initialSize" value="3" />
		<!-- 连接池的最大值 -->
		<property name="maxActive" value="800" />
		<!-- 最大空闲值 -->
		<property name="maxIdle" value="100" />
		<!-- 最小空闲值 -->
		<property name="minIdle" value="3" />
		<!-- 是否启用超时自动移除空闲链接 -->
		<property name="removeAbandoned" value="false" />
		<!-- 超时时间 -->
		<property name="removeAbandonedTimeout" value="18000" />
		<!-- 超时等待时间 -->
		<property name="maxWait" value="10000"></property>
	</bean>
	<!-- 创建SqlSession -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="typeAliasesPackage">
			<value>com.cmos.entity</value>
		</property>
		<property name="mapperLocations">
			<value>classpath:com/cmos/mapper/*.xml</value>
		</property>
	</bean>
	<!-- 扫描mybatis操作数据库的接口 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage">
			<value>com.cmos.dao</value>
		</property>
		<property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
	</bean>

	<!-- 配置事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	<!-- 定义advice,配置传播特性、事务隔离级别、只读事务、回滚策略 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="add*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
			<tx:method name="insert*" propagation="REQUIRED"
				rollback-for="java.lang.Exception" />
			<tx:method name="update*" propagation="REQUIRED"
				rollback-for="java.lang.Exception" />
			<tx:method name="*Add" propagation="REQUIRED" rollback-for="java.lang.Exception" />
			<tx:method name="del*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
			<tx:method name="back*" propagation="REQUIRED"
				rollback-for="java.lang.Exception" />
			<tx:method name="*" propagation="REQUIRED" read-only="true" />
		</tx:attributes>
	</tx:advice>
	<!-- 定义那些类使用事务 -->
	<aop:config>
		<!-- 第一个 * 是率性类型的返回值或者率性类型的访问修饰符 第二个* 率性的类 第三个* 率性的类的率性的方法 第四个.. 有参数 或者无参数 -->
		<aop:advisor pointcut="execution(* com.demo.dubbo.service.*.*(..))"
			advice-ref="txAdvice" />
	</aop:config>
</beans>